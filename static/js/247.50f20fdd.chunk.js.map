{"version":3,"file":"static/js/247.50f20fdd.chunk.js","mappings":"0NACA,EAAuB,4BAAvB,EAA2D,6BAA3D,EAA8F,2B,kBCG/E,SAASA,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAInB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,UAAC,KAAD,CACEH,UAAWC,EACXG,MAAO,CAAEC,KAAMP,GACfQ,GAAE,kBAAaH,EAAMI,IAHvB,WAME,gBACEP,UAAWC,EACXO,IACEL,EAAMM,YAfC,mCAgBQC,OAAOP,EAAMM,aAdtC,8EAiBQE,IAAI,WAELR,EAAMS,QAXFT,EAAMI,GALE,KAqBtB,CC/BD,OAAgB,IAAM,wBAAwB,KAAO,0BCCtC,SAASM,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAEnC,OACE,kBAAMd,UAAWC,EAAAA,KAAUa,SAAUA,EAArC,WACE,kBAAOd,UAAWC,EAAAA,MAChBc,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBAEd,mBAAQnB,UAAWC,EAAAA,IAASc,KAAK,SAAjC,2BAGL,CCVD,IAwCA,EAxCe,WAAO,IAAD,EAEnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GACnD,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdP,IAGJI,EAAc,KAEdI,EAAAA,EAAAA,IAAaR,GAAWS,MAAK,SAAAC,GAC3B,IAAKA,EAAKC,OAER,OADAL,GAAS,GACFM,QAAQC,IACb,2DAGJP,GAAS,GACTF,EAAcM,EACf,IACF,GAAE,CAACV,IAOJ,OACE,iCACE,SAACV,EAAD,CAAYC,SARK,SAAAuB,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cACrBlB,EAAgB,CAAEC,UAAWgB,EAAWE,SAASlB,UAAUmB,QAC3DH,EAAWI,OACZ,IAIIf,IAAS,oFAEV,SAAChC,EAAD,CAAcC,OAAQ6B,MAG3B,C,+LC1CDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAW,mCAEJC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBZ,EADuB,EACvBA,KADuB,kBAExBA,EAAKc,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IADjC,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfF,EAAY,mCAAG,WAAMmB,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACsBK,IAFnB,uBAClBjB,EADkB,EAClBA,KADkB,kBAInBA,EAAKc,SAJc,2CAAH,sDAOZI,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBJ,IAFV,uBACrBZ,EADqB,EACrBA,KADqB,kBAItBA,EAAKmB,MAJiB,2CAAH,sDAOfC,EAAe,mCAAG,WAAMJ,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBJ,IAFV,uBACrBZ,EADqB,EACrBA,KADqB,kBAItBA,EAAKc,SAJiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesResults/MoviesResults.module.css?5f89","components/MoviesResults/MoviesResults.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/movies.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesResults_list__WhQpE\",\"movie\":\"MoviesResults_movie__gTK69\",\"img\":\"MoviesResults_img__umLG1\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesResults.module.css';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport default function MoviesResult({ movies }) {\n    const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <Link\n          className={css.movie}\n          state={{ from: location }}\n          to={`/movies/${movie.id}`}\n          key={movie.id}\n        >\n          <img\n            className={css.img}\n            src={\n              movie.poster_path\n                ? imgBaseUrl.concat(movie.poster_path)\n                : defaultImg\n            }\n            alt=\"poster\"\n          />\n          {movie.title}\n        </Link>\n      ))}\n    </ul>\n  );\n}\n\nMoviesResult.propTypes = {\n  movies:PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SearchForm_btn__TXrR3\",\"form\":\"SearchForm_form__o80os\"};","import PropTypes from 'prop-types';\nimport css from './SearchForm.module.css'\nexport default function SearchForm({ onSubmit }) {\n  // console.log(onSubmit);\n  return (\n    <form className={css.form} onSubmit={onSubmit}>\n      <input className={css.input}\n        type=\"text\"\n        name=\"movieName\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie...\"\n      ></input>\n      <button className={css.btn} type=\"submit\">Find Movies</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../services/API';\nimport MoviesResult from 'components/MoviesResults/MoviesResults';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  // const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n\n    searchMovies(movieName).then(data => {\n      if (!data.length) {\n        setError(true);\n        return console.log(\n          'There is no movies with this request. Please, try again'\n        );\n      }\n      setError(false);\n      setMoviesList(data);\n    });\n  }, [movieName]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {error && <p>There is no movies with this request. Please, try again</p>}\n\n      <MoviesResult movies={moviesList}></MoviesResult>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_KEY = 'f75ad82028de22e80377d607e7f657c6';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${BASE_KEY}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${BASE_KEY}`);\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${BASE_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${BASE_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${BASE_KEY}`\n  );\n  return data.results;\n};"],"names":["MoviesResult","movies","location","useLocation","className","css","map","movie","state","from","to","id","src","poster_path","concat","alt","title","SearchForm","onSubmit","type","name","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","movieName","get","useState","moviesList","setMoviesList","error","setError","useEffect","searchMovies","then","data","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","axios","BASE_KEY","getTrendingMovies","results","getMovieDetails","movieId","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}